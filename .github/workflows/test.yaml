name: Run Tests
run-name: Run Tests on ${{ github.repository }}@${{ github.head_ref || github.ref_name }}

on:
  pull_request:
    branches: # This refers to base branches (i.e. what you are trying to merge into)
      - main
  workflow_dispatch:

permissions:
  checks: write
  contents: read

concurrency:
  group: test-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  validate:
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    name: Check and Test
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: build  # Use a shared-key to allow sharing the cache with other jobs on the same os/arch.

      - name: Cargo Check
        run: cargo check --all-features --keep-going

      - name: Cargo Test
        run: cargo test --all-features --no-fail-fast

  lint:
    name: Format and Clippy
    runs-on: ubuntu-latest
    needs: validate  # First make it work, then worry about code quality.

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Converting rustfmt to annotations requires some features only available in the nightly toolchain.
      - name: Install Rust nightly toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt

      - name: Cargo Fmt
        uses: clechasseur/rs-fmt-check@v2

      - name: Install Rust stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Cargo Clippy
        uses: actions-rs/clippy-check@v1
        with:
          toolchain: stable # This should use the same toolchain that is being used to build the project.
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --no-deps -- -D warnings
